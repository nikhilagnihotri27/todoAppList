{"version":3,"sources":["components/signupAndLogin.jsx","images/square-regular.svg","images/trash-alt-regular.svg","components/draggableTodos.jsx","images/check-square-regular.svg","images/plus-square-regular.svg","components/todoList.jsx","App.js","index.js"],"names":["SignupAndLogin","useState","authTab","setAuthTab","loginData","setLoginData","loginError","setLoginError","signupData","setSignupData","isLoading","setIsLoading","useEffect","userData","localStorage","getItem","JSON","parse","isUserAuthenticated","forEach","user","auth","window","location","pathname","handleSignupChange","e","target","id","value","handleLoginChange","loginForm","action","className","onSubmit","preventDefault","userExists","email","pwd","setItem","stringify","type","onChange","placeholder","required","href","signupForm","duplicateUser","authenticationHtml","htmlFor","onClick","TodoList","todos","setTodos","parentTodos","handleClick","updatedTodos","map","todo","i","parentNode","innerText","status","handleDelete","filter","attributes","index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","src","squareIcon","content","deleteIcon","TodosList","props","todosData","setTodosData","initialTodos","push","onDragEnd","result","destination","source","list","startIndex","endIndex","Array","from","splice","removed","reorder","droppableId","droppableProps","currentUser","setCurrentUser","addInput","setAddInput","FinishedTodos","console","log","checkIcon","todoHtml","todoExists","plusIcon","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a376e1.chunk.js","sourcesContent":["import {React, useState, useEffect} from 'react';\n\n/****** This component handles authentication of users *******/\nconst SignupAndLogin = () => {\n    const [authTab, setAuthTab] = useState('login');\n    const [loginData, setLoginData] = useState({'email':'', 'pwd':'', 'auth': false, 'todos':[]});\n    const [loginError, setLoginError] = useState(false);\n    const [signupData, setSignupData] = useState({'email':'', 'pwd':'', 'auth': false, 'todos':[]});\n    const [isLoading, setIsLoading] = useState(true);\n\n    /*** Handle submission of sign-up data of users *****/\n    const handleSignupSubmit = (e) => {\n        e.preventDefault();\n\n        /****** Check if user has already signed-up. If not, then store user credentials in local storage ******/\n        let userData = localStorage.getItem(\"todoListUserData\");    \n        if(userData === null){\n            localStorage.setItem(\"todoListUserData\",JSON.stringify([signupData]));\n        }\n        else{\n            let userData = JSON.parse(localStorage.getItem(\"todoListUserData\"));\n            let duplicateUser = false;\n            userData.forEach(user => {\n                if(user.email === signupData.email){\n                    duplicateUser = true;\n                }\n            })\n            if(!duplicateUser){\n                userData = [...userData, signupData];\n                localStorage.setItem(\"todoListUserData\",JSON.stringify(userData));\n            }\n        }\n        setSignupData({'email':'', 'pwd':'', 'auth': false, 'todos':[]});\n        setAuthTab('login');\n        /****** Check if user has already signed-up. If not, then store user credentials in local storage ******/\n    }\n    /*** Handle submission of sign-up data of users *****/\n\n    /*** Handle submission of log-in data of users *****/\n    const handleLoginSubmit = (e) => {\n        e.preventDefault();\n        let userData = localStorage.getItem(\"todoListUserData\");\n        if(userData === null){      //Error if user does not exist\n            setLoginError(true);\n        }\n        else{   //Verify user's credentials from local storage data\n            let userExists = false;\n            userData = JSON.parse(userData);\n            userData.forEach(user => {\n                if(user.email === loginData.email && user.pwd === loginData.pwd){\n                    userExists = true;\n                    user.auth = true;\n                }\n            })\n            if(userExists){     //Successful login\n                localStorage.setItem(\"todoListUserData\", JSON.stringify(userData));\n                window.location.pathname = \"/todos\";\n            }\n            else{\n                setLoginError(true);\n                setLoginData({'email':'', 'pwd':'', 'auth': false, 'todos':[]});\n            }\n        }\n    }\n    /*** Handle submission of log-in data of users *****/\n\n    /**** On authentication page, check if user is logged in. \n    ** If already loggedin, take user to their todos page *****/\n    useEffect(() => {\n        let userData = localStorage.getItem(\"todoListUserData\");\n        if(userData !== null){\n            userData = JSON.parse(userData);\n            let isUserAuthenticated = false;\n            userData.forEach(user => {\n                if(user.auth === true){\n                    isUserAuthenticated = true;\n                }\n            })\n            isUserAuthenticated ? window.location.pathname = \"/todos\" : setIsLoading(false);\n        }\n        else{\n            setIsLoading(false);\n        }\n    }, [])\n    \n\n    /*** Update signup data ***/\n    const handleSignupChange = (e) => {\n        setSignupData({...signupData,[e.target.id]:e.target.value});\n    }\n    /*** Update signup data ***/\n\n    /*** Update Login data ***/\n    const handleLoginChange = (e) => {\n        setLoginData({...loginData,[e.target.id]:e.target.value});\n    }\n    /*** Update Login data ***/\n\n    /*** Html of Input form on Login tab ****/\n    const loginForm = (\n        <form action=\"#\" className=\"login\" onSubmit={handleLoginSubmit}>\n            <div className=\"field\">\n                <input id=\"email\" type=\"text\" onChange={handleLoginChange} placeholder=\"Email Address\" value={loginData.email || ''} required />\n            </div>\n            <div className=\"field\">\n                <input id=\"pwd\" type=\"password\" onChange={handleLoginChange} placeholder=\"Password\" value={loginData.pwd || ''} required />\n            </div>\n            {\n                loginError ? <div className=\"error\"><p>User does not exist</p></div> : ''\n            }\n            <div className=\"field btn\">\n                <div className=\"btn-layer\"></div>\n                <input type=\"submit\" value=\"Login\" />\n            </div>\n            <div className=\"signup-link\">\n                Not a member? <a href=\"\">Signup now</a>\n            </div>\n        </form> \n    );\n    /*** Html of Input form on Login tab ****/\n\n    /*** Html of Input form on Signup tab ****/\n    const signupForm = (\n        <form action=\"#\" className=\"signup\" onSubmit={handleSignupSubmit}>\n            <div className=\"field\">\n                <input id=\"email\" onChange={handleSignupChange} type=\"text\" placeholder=\"Email Address\" value={signupData.email || ''} required />\n            </div>\n            <div className=\"field\">\n                <input id=\"pwd\" onChange={handleSignupChange} type=\"password\" placeholder=\"Password\" value={signupData.pwd || ''} required />\n            </div>\n            <div className=\"field btn\">\n                <div className=\"btn-layer\"></div>\n                <input type=\"submit\" value=\"Signup\" />\n            </div>\n        </form>\n    );\n    /*** Html of Input form on Signup tab ****/\n\n    /**** Html of the whole authentical page *****/\n    const authenticationHtml = (\n        <>\n            <div className=\"wrapper\">\n                <div className=\"titles\">\n                    {authTab === 'login' ? \n                        <div className=\"title-login\">Login Form</div> : \n                        <div className=\"title-signup\">Signup Form</div>\n                    }\n                </div>\n\n                <div className=\"form-container\">\n                    <div className=\"slide-controls\">\n                        <label htmlFor=\"login\" onClick={() => setAuthTab('login')}\n                            className={\"slide slide-login \" + (authTab === 'login' ? \"active\" : \"\")}\n                        >\n                            Login\n                        </label>\n                        <label htmlFor=\"signup\" onClick={() => setAuthTab('signup')}\n                            className={\"slide slide-signup \" + (authTab === 'login' ? \"\" : \"active\")}>\n                            Signup\n                        </label>\n                        <div className=\"slider-tab\"></div>\n                    </div>\n\n                    <div className=\"form-inner\">\n                        { authTab === 'login' ? loginForm :  signupForm }\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n    /**** Html of the whole authentical page *****/\n\n    return (\n        <> {isLoading ? '' : authenticationHtml}</>    \n    )\n}\n/****** This component handles authentication of users *******/\n\nexport default SignupAndLogin;","export default __webpack_public_path__ + \"static/media/square-regular.ef9534db.svg\";","export default __webpack_public_path__ + \"static/media/trash-alt-regular.96ae42b3.svg\";","import React, { useState, useEffect } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport squareIcon from '../images/square-regular.svg';\nimport deleteIcon from '../images/trash-alt-regular.svg'\n\n/*** Reorders draggable lists for DND library **/\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**** Reorders draggable lists for DND library **/\n\n/**** Component for individual draggable todos *****/\nconst TodoList = ({ todos, setTodos, parentTodos }) => {\n\n  /*** Moves the pending todo to a finished todo ****/\n  const handleClick = (e) => {\n    let updatedTodos = parentTodos.map((todo,i) => {\n      if(todo.value === e.target.parentNode.parentNode.innerText){\n        return {value:todo.value,status:'done'}\n      }\n      else{\n        return {value:todo.value,...todo};\n      }\n    });\n    setTodos(updatedTodos);\n  }\n  /*** Moves the pending todo to a finished todo ****/\n\n  /**** Deletes pending todo from the list ****/\n  const handleDelete = (e) => {\n    let updatedTodos = parentTodos.filter(todo => {\n        return todo.value !== e.target.parentNode.attributes[1].value\n    });\n    setTodos(updatedTodos);\n  }\n  /**** Deletes pending todo from the list ****/\n\n  return todos.map((todo, index) => (\n    <Draggable draggableId={todo.id} index={index} key={todo.id}>\n      {provided => (\n        <div className=\"todo-row draggable\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n          <div className=\"check-icon\">\n              <img onClick={handleClick} src={squareIcon}></img>\n              <span>{todo.content}</span>\n          </div>\n          <div className=\"del-icon\" data-val={todo.content} onClick={handleDelete} ><img src={deleteIcon}></img></div>\n        </div>\n      )}\n    </Draggable>\n  ));\n};\n/**** Component for individual draggable todos *****/\n\n/**** This component handles the pending todos and gives them draggable functionality ***/\nconst TodosList = (props) => {\n  const [todosData, setTodosData] = useState({ todos: [] });\n\n  useEffect(() => {\n    let initialTodos = [];\n    props.todos.forEach((todo,i) => { \n     if(todo.status===\"pending\"){\n      initialTodos.push({ id: `id-${i}`, content: todo.value }); \n     } \n    });\n    setTodosData({ todos: initialTodos });\n  }, [props])\n\n  function onDragEnd(result) {\n    if (!result.destination) {  return; }\n    if (result.destination.index === result.source.index) { return;}\n    const todos = reorder( todosData.todos, result.source.index, result.destination.index );\n    setTodosData({ todos });\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\">\n        {provided => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            <TodoList todos={todosData.todos} setTodos={props.setTodos} parentTodos={props.todos}/>\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n/**** This component handles the pending todos and gives them draggable functionality ***/\n\nexport default TodosList;","export default __webpack_public_path__ + \"static/media/check-square-regular.7f296387.svg\";","export default __webpack_public_path__ + \"static/media/plus-square-regular.18883807.svg\";","import {React, useEffect, useState} from 'react';\nimport TodosList from './draggableTodos';\nimport deleteIcon from '../images/trash-alt-regular.svg';\nimport checkIcon from '../images/check-square-regular.svg';\nimport plusIcon from '../images/plus-square-regular.svg';\n\n/**** This component displays the Todo list for the specific user *****/\nconst TodoList = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [todos, setTodos] = useState([]);\n    const [currentUser, setCurrentUser] = useState([]);\n    const [addInput, setAddInput] = useState(\"\");\n\n    /**** On todos page, check if user is logged in. \n    ** If not loggedin, take user to the login page **\n    ** If logged in, store the todos of this user in local states ***/\n    useEffect(() => {\n        let userData = localStorage.getItem(\"todoListUserData\");\n        if(userData!== null){\n            userData = JSON.parse(userData);\n            let isUserAuthenticated = false;\n            userData.forEach(user => {\n                if(user.auth === true){ \n                    isUserAuthenticated = true; \n                    setCurrentUser(user.email);\n                    setTodos(user.todos);\n                }\n            });\n            !isUserAuthenticated ? window.location.pathname = \"/\" : setIsLoading(false);\n        }\n        else{\n            window.location.pathname = \"/\";\n        }\n    }, []);\n\n    /**** Whenever todos are updated, update them in the local storage ***/\n    useEffect(() => {\n        let userData = JSON.parse(localStorage.getItem(\"todoListUserData\"));\n        userData.forEach(user => {\n            if(user.email === currentUser){\n                user.todos = [...todos];\n            }\n        });\n        localStorage.setItem(\"todoListUserData\", JSON.stringify(userData));\n        setAddInput('');    //Clear out text input field\n    }, [todos]);\n    /**** Whenever todos are updated, update them in the local storage ***/\n\n    /**** On Click of logout button, take the user to login page ***/\n    const handleLogout = () => {\n        let userData = JSON.parse(localStorage.getItem(\"todoListUserData\"));\n        userData.forEach(user => user.auth = false);    //Set the auth field false for the user\n        localStorage.setItem(\"todoListUserData\", JSON.stringify(userData));\n        window.location.pathname = \"/\";\n    }\n    /**** On Click of logout button, take the user to login page ***/\n\n    /**** Add a new todo to the list *****/\n    const addTodo = (e) => {\n        let todoExists = false;\n        todos.forEach(todo => {\n            if(todo.value === addInput){ todoExists = true; }\n        });\n        if(!todoExists && addInput!==\"\"){   //Check if todo already exists or if the input field is empty\n            setTodos([...todos, {value: addInput, status: 'pending'}]);\n        }\n    }\n    /**** Add a new todo to the list *****/\n\n    /**** This component handles the todos that were marked finished ***/\n    const FinishedTodos = () => {\n\n        /*** Moves the finished todo back to a pending todo ****/\n        const handleClick = (e) => {\n            let updatedTodos = todos.map((todo,i) => {\n                if(todo.value === e.target.parentNode.parentNode.innerText){\n                  return {value:todo.value,status:'pending'}\n                }\n                else{\n                  return {value:todo.value,...todo};\n                }\n            });\n            setTodos(updatedTodos);\n        }\n        /*** Moves the finished todo back to a pending todo ****/\n\n        /**** Deletes finished todo from the list ****/\n        const handleDelete = (e) => {\n            console.log(e.target.parentNode.parentNode.innerText);\n            let updatedTodos = todos.filter(todo => {\n                return todo.value !== e.target.parentNode.attributes[0].value\n            });\n            setTodos(updatedTodos);\n        }\n        /**** Deletes finished todo from the list ****/\n\n        return todos.map((todo,i) => {\n            if(todo.status !== 'pending'){\n                return (\n                    <div key={i} >\n                        <div className=\"todo-row\">\n                            <div className=\"check-icon\">\n                                <img onClick={handleClick} src={checkIcon}></img>\n                                <span>{todo.value}</span>\n                            </div>\n                            <div onClick={handleDelete} data-id={todo.value} className=\"del-icon\"><img src={deleteIcon}></img></div>\n                        </div>\n                    </div>\n                );\n            }\n        })\n    };\n    /**** This component handles the todos that were marked finished ***/\n\n    /*** Html of todo lists ***/\n    const todoHtml = (\n        <>\n            <div className=\"logout\">\n                <p onClick={handleLogout}>Logout</p>\n            </div>\n            <div className=\"wrapper\">\n                <div className=\"titles\">\n                    Todo List\n                </div>\n                <div className=\"list-container\">\n                    <div className=\"addItems\">\n                        <input className=\"addInput\" type=\"text\" placeholder=\"Add Items\" value={addInput} onChange={(e) => setAddInput(e.target.value)} />\n                        <div className=\"plus-icon\" onClick={addTodo}><img src={plusIcon}></img></div>\n                    </div>\n                    <div className=\"todoList\">\n                        <TodosList \n                            todos={todos}\n                            setTodos={setTodos}\n                        />\n                    </div>\n                    <div className=\"todoList finished\">\n                        <FinishedTodos /> \n                    </div>\n                </div>\n            </div>\n        </>\n    );\n    /*** Html of todo lists ***/\n\n    return (\n        <> {isLoading === true ? '' : todoHtml} </>\n    )\n};\n/**** This component displays the Todo list for the specific user *****/\n\nexport default TodoList;","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {React} from 'react';\nimport SignupAndLogin from './components/signupAndLogin';\nimport TodoList from './components/todoList';\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <SignupAndLogin />\n          </Route>\n          <Route path=\"/todos\">\n            <TodoList />\n          </Route>\n        </Switch>\n      </BrowserRouter> \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}